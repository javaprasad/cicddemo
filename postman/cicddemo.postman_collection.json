{
	"info": {
		"_postman_id": "78aa59b6-0df3-4a4c-8e26-c95e40955551",
		"name": "cicddemo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34714738"
	},
	"item": [
		{
			"name": "GetAllEmployees",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the JSON response\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"// Test 1: Check the response status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test 2: Check the response is an array\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    pm.expect(Array.isArray(jsonData)).to.be.true;\r",
							"});\r",
							"\r",
							"// Test 3: Check the array length is 5\r",
							"pm.test(\"Response contains exactly 5 items\", function () {\r",
							"    pm.expect(jsonData.length).to.eql(5);\r",
							"});\r",
							"\r",
							"// Test 4: Check each item has the required properties and correct data types\r",
							"jsonData.forEach((item, index) => {\r",
							"    pm.test(`Item ${index + 1} has required properties with correct data types`, function () {\r",
							"        pm.expect(item).to.have.property(\"rno\").that.is.a(\"number\");\r",
							"        pm.expect(item).to.have.property(\"name\").that.is.a(\"string\");\r",
							"        pm.expect(item).to.have.property(\"designation\").that.is.a(\"string\");\r",
							"        pm.expect(item).to.have.property(\"salary\").that.is.a(\"number\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/employees",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetGivenEmployees",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the JSON response\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"// Test 1: Check the response status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test 2: Check the response is an array\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/employees/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employees",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "TestNotFound",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the JSON response\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"// Test 1: Check the response status code is 200\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"// Test 2: Check the response is an array\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/employees/name/jp",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employees",
						"name",
						"jp"
					]
				}
			},
			"response": []
		}
	]
}