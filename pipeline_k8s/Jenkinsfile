pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = '' // Leave empty for Docker Hub
        DOCKER_IMAGE = 'nvjprasad/cicddemo'
        DOCKER_TAG = 'latest'
        KUBE_CONFIG_PATH = '/home/jp/.kube/config'
    }

    stages {
        stage('Clone repository') {
            steps {
                git branch: 'master', url: 'https://github.com/nvjprasad2020/cicddemo.git'
            }
        }


        stage('Build with Maven') {
            steps {
                script {
                    // Run Maven package command
                    sh 'mvn package'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    script {
                        sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
                        sh "docker push ${DOCKER_IMAGE}:${DOCKER_TAG}"
                    }
                }
            }
        }

        stage('Deploy to Minikube') {
            steps {
                script {
                    sh "kubectl --kubeconfig=${KUBE_CONFIG_PATH} apply -f k8s/deployment.yaml"
                    sh "kubectl --kubeconfig=${KUBE_CONFIG_PATH} apply -f k8s/service.yaml"
                }
            }
        }
    }

    post {
        always {
            script {
//                 sh "docker rmi ${DOCKER_REGISTRY}${DOCKER_IMAGE}:${DOCKER_TAG} || true"
                echo "Deployment completed ...!!!!"
            }
        }
    }
}
